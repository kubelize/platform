apiVersion: v1
kind: Namespace
metadata:
  name: argocd
---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    pod-security.kubernetes.io/audit: baseline
    pod-security.kubernetes.io/enforce: privileged
    pod-security.kubernetes.io/warn: baseline
  name: proxmox-system
---
apiVersion: v1
kind: Namespace
metadata:
  name: teleport-kube-agent
---
allowVolumeExpansion: true
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
  name: proxmox
parameters:
  cache: writeback
  csi.storage.k8s.io/fstype: ext4
  ssd: "true"
  storage: zoom
provisioner: csi.proxmox.sinextra.dev
reclaimPolicy: Delete
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
data:
  config.yaml: ENC[AES256_GCM,data:eay1XIrnJvXyekta2GTQWjm6ijDRkMDPauknebvQydFJugRxwiWpfG+Eq+QmAHkxdn+C1fmS+6j/+P2xOXZBXlnVfvnw/osIQV/mCPLZjOGebGruv9pBlVQN7NZJLIRkGGC92lYwNykrkT5W+imseqYGobe9rdF6x4EjeQ1R7PDrpwp2I8uD5By2+THGmjBIMXROBv8zolDwYwBwfuK2t0tVckyjCpAy8IV0HDVMvgGhoCvRxZXatB99m1FvL+2YMpK4hn96bE0u8+RQAmQhnhpZJZiDC9sMSywAtnbhGZcVSsFrsurMVpoZCT3annjmJSRnZynKVgI5Lo2TiSv31hkPNGiim7QN9aMGmo8Y3tZK/DUc5b6Nt/YYax4dD7TyMJV5Tt3bERPIm/6+YIzArDtlfbPxDRKhstkyBcMO7iz5aMq6C+9BLXvvBzwFqh5nmLLAQ0+gNEzBj2/1olRpQx4Ei72nmzYmwOu8vtKFzkgZqvsZilXZjgV1g7VkO9UaRhIGmz4i+YEtLwnjdDcmRTPBF2gIWyXnUmBcOq2A80Lirq2C2foce+KgPcUCf1ER6x1o2NUlj8UsUCS9KOOvszh8NbaWWSt7,iv:vS18P7y0x4rgNkw0myZePo1lc5m2os6E9Gjzq+E0QtQ=,tag:tPJM7Q/zssciHGefWNsfuA==,type:str]
kind: Secret
metadata:
  creationTimestamp: null
  name: proxmox-csi-plugin
  namespace: proxmox-system
sops:
  age: []
  azure_kv: []
  encrypted_regex: ^(data|stringData|secrets)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2025-05-17T13:04:10Z"
  mac: ENC[AES256_GCM,data:+ayhnOS5lW9TaIL2UTKyz7dnsYVK9SsqYEARcbKKanffxgwe8xXnA+slNucGtnhptxmN+F+NkoPI7GD/STiLKAlOQh630v58M3tgX+X7Jm97HQxnr7NfJTnF6nJdtp4wPiQGWaXe7/kyagxSokjfGwSScWqJu4sj56uc25klTc8=,iv:/xhhDCOLABOwET8pZYYs6FpndBQDf/rvpnfPhvZUgy0=,tag:Flcv5Fv49aC+EmD0lUbFLg==,type:str]
  pgp:
  - created_at: "2025-05-17T13:04:10Z"
    enc: |-
      -----BEGIN PGP MESSAGE-----

      hQIMAwFcjQZ1ckKcAQ//amlaKmx7Ff/nDr4KIEVqmYswlaYJ+MrClf28HbVg7PyH
      EU13OZ/93faB3BXUG3wau2Kl5BevGKPtR9cmsSoOpnkejpf+/kYDU2Iu8L4hfpiE
      V4dMv+alt92p3cmUopB+w5Wm2iLjZ+J3OUA48QvBIe4bqVyAjLjMyi9NtiuILnz0
      XiZ+c1gNmbN+XpbQQIC3pNY8naEQekGIl/czqXsmSCr7g+ka5Um2VpROpCB6POgj
      5bkrwI2vV2lisz7LPkKS7/6Gnbf2x37L07kLVzGY4LuwHkN/w+xu3T2l6dC5E5qy
      hRy+49VdBDr51CcEGRv/zGvYZSYBSXlnqEFNjZK6tZAoAnWbdhGew7yKVn/UFQhv
      MQKPpTGj79qT+9ir5hctEwL1aSYQ0Uq4HbehuDUlduY+m53xLkfQ+PtZMaTn7M6D
      c17Z+p6EoPnhU+MSEimlZB6wDBknE02wS/v8HtG/Ebble6Wa01JmJUHDcsRUNxUb
      C8RhqRLvJeVhz0OFqoTJ0OFr6EJ5eDIhKM9tfcMmPQ+qyUhoZR9VVn3Qt6YPOS8i
      qfFIDndgItoZHSqQVtGQQ6c9H8la54ecicROyA2XvJ9X7POa0jebcHACQmd8kUYG
      JVsM7aBtytb9PYRFbABv74JolLEKp782FEEM2zV/D8zrkUO5ap4213K0B4H+aLvU
      aAEJAhATttdgQLeLwLYweIeivULp1K2ynKmAAgiTd40OP/5QUlyJNyRT2vbWames
      APzkxX/lQF0WsmdAYVD31mA4A1f4dI7g8SElhkFF9E2QCZaBqiX0mSUNo+mFsQCN
      f/IMm3hPNic2
      =rJsk
      -----END PGP MESSAGE-----
    fp: 4C460A5D1A91A52F3E204754CA746D9D4345890B
  version: 3.9.4
---
apiVersion: v1
data:
  auth-token: ENC[AES256_GCM,data:8U6oqrpsYLze2IAAK7M0heLmceaUeNlDxzZgMYlT9xPeScWrPBB4pNoj6gA=,iv:6srI1PSSyXIdpQ7JODI8+SQLYOQqWMVrDTnIl1srWPs=,tag:6GODyPcsbYi1DE/Ilj0bKw==,type:str]
kind: Secret
metadata:
  name: teleport-kube-agent-join-token
  namespace: teleport-kube-agent
sops:
  age: []
  azure_kv: []
  encrypted_regex: ^(data|stringData|secrets)$
  gcp_kms: []
  hc_vault: []
  kms: []
  lastmodified: "2025-06-07T15:24:17Z"
  mac: ENC[AES256_GCM,data:dTKCxgQbobcfkYQa4G2lRfeRTzF5zUmqcdUbfBFgup3tpe0A/VbaVEVKXb1St4Cpy0/Q3VQ7qnNiVERbvE5io1jUEnjMacZiU/OV3fvFlvO6SW5FcrsOy3W2VJULN30tzu9zFb5MmuVShHCplT4Vcuk1L7qWabUFs2lyJ4Zuh0E=,iv:XT9wfeJnL/LURVhWFWTkMMN4yMEISno8rQerEQPlj2A=,tag:GjpKCHsNfm71uPfAiv35NA==,type:str]
  pgp:
  - created_at: "2025-06-07T15:24:17Z"
    enc: |-
      -----BEGIN PGP MESSAGE-----

      hQIMAwFcjQZ1ckKcARAAnHnzWJYaq9ArYTGMj2b8LHDiaAxcJ3UleAmxtIxUgx1R
      vvXBWpl8zZiXFfsbkBI4C5qKM0xnIvhUCt8SFnHSypzPDWFGrxmOeQb42/GmJdJN
      zL+JkOlfGpgHdL+jopZKmzuliWo3UYEM57V6atpdIR1fL05sFZHnO2MgYHsqUEWd
      SO+9KYvlIUmkArnr3mw7LS1jXrjnKcRo1bod5ubmFkjx3IH5DCKERuciJwSDlaJq
      N7DFJ0rQ9CHvM3vWoHMxRGtCEchHyGwQYVH+MDu1YkJgn+2ysV6tQ7kzmaedwBtA
      rPBvtWCTZi2HFNgEfByU/MPa6FWw1uq0bjTK4ynHy5YypXokgzMxszGSBzo5Fsf/
      mroNP/tR7iw6nb5miW/Rjf5yw/ngrTY9yhKHW8oXbWaK0/pBYx9E4rDF29AYs2y5
      Y1PFJHoNoEF/BC/a9NodXfIkGsN2JH3GQtfABik1F7YkIt1EBLlCWsoo1o6OLEZw
      queRwrwFcXR9mT1MRwFbV+ZG0vSyoISPvOY3GmzPDE/ohbhxwt0mtoopypoJz+lc
      fja4pvE4e+vHGRchYaHm55VcMv8Y3vQxBdo8Kye977eGtBH4BR5ggsi17AzlRCzK
      HSkAQaaCI45WMHdnA/pAg+U1dX0xR3Vd83H5x3ntBqRx2LD3C+tZwf7cP5uwyJjU
      ZgEJAhCGqpZTbwPaP+ySH92/FvYK9e18yBzBOYaKhaUbQmVu3HJtxWeJxHjLtLmO
      SZbdX/escOVVozwfG8lbjpoH+kXuIA1+M6RWojrW43p0W3Ia6koyYdJKrHfSFoe5
      edv0nx6f1g==
      =jolp
      -----END PGP MESSAGE-----
    fp: 4C460A5D1A91A52F3E204754CA746D9D4345890B
  version: 3.9.4
type: Opaque
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  annotations:
    argocd.argoproj.io/ignore-healthcheck: "true"
  name: a01-vcluster
  namespace: argocd
spec:
  destination:
    namespace: a01-reserved
    server: https://kubernetes.default.svc
  project: default
  source:
    chart: vcluster
    helm:
      releaseName: my-vcluster
    repoURL: https://charts.loft.sh
    targetRevision: '*'
  syncPolicy:
    automated:
      allowEmpty: false
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true
    - Validate=false
    - PrunePropagationPolicy=foreground
    - PruneLast=false
    - ApplyOutOfSyncOnly=true
    - FailOnSharedResource=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  annotations:
    argocd.argoproj.io/ignore-healthcheck: "true"
  name: a02-vcluster
  namespace: argocd
spec:
  destination:
    namespace: a02-reserved
    server: https://kubernetes.default.svc
  project: default
  source:
    chart: vcluster
    helm:
      releaseName: my-vcluster
    repoURL: https://charts.loft.sh
    targetRevision: '*'
  syncPolicy:
    automated:
      allowEmpty: false
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true
    - Validate=false
    - PrunePropagationPolicy=foreground
    - PruneLast=false
    - ApplyOutOfSyncOnly=true
    - FailOnSharedResource=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  annotations:
    argocd.argoproj.io/ignore-healthcheck: "true"
  name: cert-manager
  namespace: argocd
spec:
  destination:
    namespace: cert-manager
    server: https://kubernetes.default.svc
  project: default
  sources:
  - chart: cert-manager
    helm:
      parameters: []
      valuesObject:
        crds:
          enabled: true
    repoURL: https://charts.jetstack.io
    targetRevision: v1.17.0
  - path: apps/operators/connectivity/cert-manager/addons
    repoURL: https://github.com/kubelize/platform
    targetRevision: main
  syncPolicy:
    automated:
      allowEmpty: false
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true
    - Validate=false
    - PrunePropagationPolicy=foreground
    - PruneLast=false
    - ApplyOutOfSyncOnly=true
    - FailOnSharedResource=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  annotations:
    argocd.argoproj.io/ignore-healthcheck: "true"
  name: cilium
  namespace: argocd
spec:
  destination:
    namespace: kube-system
    server: https://kubernetes.default.svc
  project: default
  sources:
  - chart: cilium
    helm:
      parameters: []
      valuesObject:
        cgroup:
          autoMount:
            enabled: false
          hostRoot: /sys/fs/cgroup
        externalIPs:
          enabled: true
        hubble:
          relay:
            enabled: true
          ui:
            enabled: true
        ingressController:
          enabled: false
        ipam:
          mode: kubernetes
        k8sServiceHost: localhost
        k8sServicePort: 7445
        kubeProxyReplacement: true
        l2announcements:
          enabled: true
        podSecurityContext:
          appArmorProfile:
            type: Unconfined
        securityContext:
          capabilities:
            ciliumAgent:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETUID
            - SETGID
            cleanCiliumState:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
    repoURL: https://helm.cilium.io
    targetRevision: 1.17.0
  - path: apps/operators/connectivity/cilium/addons
    repoURL: https://github.com/kubelize/platform
    targetRevision: main
  syncPolicy:
    automated:
      allowEmpty: false
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true
    - Validate=false
    - PrunePropagationPolicy=foreground
    - PruneLast=false
    - ApplyOutOfSyncOnly=true
    - FailOnSharedResource=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  annotations:
    argocd.argoproj.io/ignore-healthcheck: "true"
  name: crossplane
  namespace: argocd
spec:
  destination:
    namespace: crossplane-system
    server: https://kubernetes.default.svc
  project: default
  source:
    chart: crossplane
    helm:
      valuesObject:
        podSecurityContextCrossplane:
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        podSecurityContextRBACManager:
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
        resourcesCrossplane:
          limits:
            cpu: 500m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 256Mi
        resourcesRBACManager:
          limits:
            cpu: 100m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 256Mi
        securityContextCrossplane:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
        securityContextRBACManager:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65534
          runAsNonRoot: true
          runAsUser: 65534
          seccompProfile:
            type: RuntimeDefault
    repoURL: https://charts.crossplane.io/stable
    targetRevision: 1.19.0
  syncPolicy:
    automated:
      allowEmpty: false
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true
    - Validate=false
    - PrunePropagationPolicy=foreground
    - PruneLast=false
    - ApplyOutOfSyncOnly=true
    - FailOnSharedResource=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  annotations:
    argocd.argoproj.io/ignore-healthcheck: "true"
  name: crossplane-providers
  namespace: argocd
spec:
  destination:
    namespace: crossplane-system
    server: https://kubernetes.default.svc
  project: default
  source:
    chart: raw
    helm:
      valuesObject:
        resources:
        - apiVersion: pkg.crossplane.io/v1beta1
          kind: DeploymentRuntimeConfig
          metadata:
            name: default
          spec:
            deploymentTemplate:
              spec:
                selector: {}
                template:
                  spec:
                    containers:
                    - name: package-runtime
                      securityContext:
                        allowPrivilegeEscalation: false
                        capabilities:
                          drop:
                          - ALL
                        runAsNonRoot: true
                        runAsUser: 65534
                    securityContext:
                      fsGroup: 65534
                      runAsNonRoot: true
                      runAsUser: 65534
                      seccompProfile:
                        type: RuntimeDefault
        - apiVersion: pkg.crossplane.io/v1beta1
          kind: DeploymentRuntimeConfig
          metadata:
            name: provider-kubernetes
          spec:
            deploymentTemplate:
              spec:
                selector: {}
                template:
                  spec:
                    containers:
                    - name: package-runtime
                      securityContext:
                        allowPrivilegeEscalation: false
                        capabilities:
                          drop:
                          - ALL
                        runAsNonRoot: true
                        runAsUser: 65534
                    securityContext:
                      fsGroup: 65534
                      runAsNonRoot: true
                      runAsUser: 65534
                      seccompProfile:
                        type: RuntimeDefault
            serviceAccountTemplate:
              metadata:
                name: provider-kubernetes
        - apiVersion: pkg.crossplane.io/v1
          kind: Provider
          metadata:
            name: provider-kubernetes
          spec:
            package: xpkg.upbound.io/crossplane-contrib/provider-kubernetes:v0.15.0
            runtimeConfigRef:
              name: provider-kubernetes
        - apiVersion: pkg.crossplane.io/v1
          kind: Provider
          metadata:
            name: provider-vault
          spec:
            package: xpkg.upbound.io/upbound/provider-vault:v2.2.1
            runtimeConfigRef:
              name: default
        - apiVersion: pkg.crossplane.io/v1
          kind: Function
          metadata:
            name: function-go-templating
          spec:
            package: xpkg.upbound.io/crossplane-contrib/function-go-templating:v0.8.0
            runtimeConfigRef:
              name: default
        - apiVersion: pkg.crossplane.io/v1beta1
          kind: Function
          metadata:
            name: function-auto-ready
          spec:
            package: xpkg.upbound.io/crossplane-contrib/function-auto-ready:v0.3.0
            runtimeConfigRef:
              name: default
        - apiVersion: pkg.crossplane.io/v1beta1
          kind: Function
          metadata:
            name: function-patch-and-transform
          spec:
            package: xpkg.upbound.io/crossplane-contrib/function-patch-and-transform:v0.2.1
            runtimeConfigRef:
              name: default
    repoURL: https://bedag.github.io/helm-charts
    targetRevision: 2.0.0
  syncPolicy:
    automated:
      allowEmpty: false
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true
    - Validate=false
    - PrunePropagationPolicy=foreground
    - PruneLast=false
    - ApplyOutOfSyncOnly=true
    - FailOnSharedResource=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  annotations:
    argocd.argoproj.io/ignore-healthcheck: "true"
  name: csi-proxmox
  namespace: argocd
spec:
  destination:
    namespace: proxmox-system
    server: https://kubernetes.default.svc
  project: default
  sources:
  - path: apps/operators/storage/csi-proxmox/deploy
    repoURL: https://github.com/kubelize/platform
    targetRevision: main
  syncPolicy:
    automated:
      allowEmpty: false
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true
    - Validate=false
    - PrunePropagationPolicy=foreground
    - PruneLast=false
    - ApplyOutOfSyncOnly=true
    - FailOnSharedResource=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  annotations:
    argocd.argoproj.io/ignore-healthcheck: "true"
  name: ingress-nginx
  namespace: argocd
spec:
  destination:
    namespace: ingress-nginx
    server: https://kubernetes.default.svc
  project: default
  source:
    chart: ingress-nginx
    helm:
      parameters: []
      valuesObject:
        controller:
          allowSnippetAnnotations: true
          config:
            annotations-risk-level: Critical
    repoURL: https://kubernetes.github.io/ingress-nginx
    targetRevision: 4.12.0
  syncPolicy:
    automated:
      allowEmpty: false
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true
    - Validate=false
    - PrunePropagationPolicy=foreground
    - PruneLast=false
    - ApplyOutOfSyncOnly=true
    - FailOnSharedResource=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  annotations:
    argocd.argoproj.io/ignore-healthcheck: "true"
  name: teleport-kube-agent
  namespace: argocd
spec:
  destination:
    namespace: teleport-kube-agent
    server: https://kubernetes.default.svc
  project: default
  source:
    chart: teleport-kube-agent
    helm:
      valuesObject:
        apps:
        - insecure_skip_verify: true
          name: dhe-pve
          uri: https://10.130.5.120:8006
        - name: home-dhe-grafana
          rewrite:
            headers:
            - 'Host: dev-dhe-grafana.teleport.kubelize.com'
            - 'csrf_trusted_origins: ''http://dev-dhe-grafana.teleport.kubelize.com'''
          uri: http://monitoring-kube-prometheus-stack-grafana.monitoring.svc.cluster.local
        - name: home-dhe-prometheus
          uri: http://monitoring-kube-prometheus-prometheus.monitoring.svc.cluster.local:9090
        - name: home-dhe-alertmanager
          uri: http://alertmanager-operated.monitoring.svc.cluster.local:9093
        - name: home-dhe-argocd
          uri: http://argocd-server.argocd.svc.cluster.local
        - name: home-dhe-hubble
          uri: http://hubble-ui.kube-system.svc.cluster.local
        - insecure_skip_verify: true
          name: home-dhe-web-rcon
          rewrite:
            headers:
            - 'Connection: Upgrade'
            - 'Upgrade: websocket'
            - 'Host: home-dhe-web-rcon.teleport.kubelize.com'
            - 'Scheme: wss'
            - 'Filename: /ws'
          uri: https://web-rcon-service.web-rcon.svc.cluster.local
        highAvailability:
          replicaCount: 2
          requireAntiAffinity: true
        initSecurityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 9807
          seccompProfile:
            type: RuntimeDefault
        joinTokenSecret:
          create: false
        kubeClusterName: home-dhe
        kubernetesDiscovery:
        - labels:
            teleport.dev/enabled: "true"
          namespaces:
          - '*'
          types:
          - app
        - labels:
            teleport.dev/enabled: "on"
          namespaces:
          - '*'
          types:
          - app
        podSecurityPolicy:
          enabled: false
        proxyAddr: teleport.kubelize.com:443
        resources:
          limits:
            cpu: 200m
            memory: 265Mi
          requests:
            cpu: 100m
            memory: 128Mi
        roles: kube,app,discovery
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 9807
          seccompProfile:
            type: RuntimeDefault
    repoURL: https://charts.releases.teleport.dev
    targetRevision: 16.5.12
  syncPolicy:
    automated:
      allowEmpty: false
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true
    - Validate=false
    - PrunePropagationPolicy=foreground
    - PruneLast=false
    - ApplyOutOfSyncOnly=true
    - FailOnSharedResource=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  annotations:
    argocd.argoproj.io/ignore-healthcheck: "true"
  name: tenants
  namespace: argocd
spec:
  destination:
    namespace: tenants
    server: https://kubernetes.default.svc
  project: default
  sources:
  - path: clusters/home-dhe
    repoURL: https://github.com/kubelize/tenants
    targetRevision: main
  syncPolicy:
    automated:
      allowEmpty: false
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true
    - Validate=false
    - PrunePropagationPolicy=foreground
    - PruneLast=false
    - ApplyOutOfSyncOnly=true
    - FailOnSharedResource=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  annotations:
    argocd.argoproj.io/ignore-healthcheck: "true"
  name: vault
  namespace: argocd
spec:
  destination:
    namespace: vault
    server: https://kubernetes.default.svc
  project: default
  source:
    chart: vault
    helm:
      releaseName: vault
      valuesObject:
        injector:
          enabled: false
        server:
          dev:
            enabled: true
          ha:
            enabled: false
        ui:
          enabled: true
    repoURL: https://helm.releases.hashicorp.com
    targetRevision: 0.28.0
  syncPolicy:
    automated:
      allowEmpty: false
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true
    - Validate=false
    - PrunePropagationPolicy=foreground
    - PruneLast=false
    - ApplyOutOfSyncOnly=true
    - FailOnSharedResource=true
---
apiVersion: cilium.io/v2alpha1
kind: CiliumLoadBalancerIPPool
metadata:
  name: site-dhe
spec:
  blocks:
  - start: 10.130.5.230
    stop: 10.130.5.250
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: argocd
  namespace: argocd
spec:
  chart:
    spec:
      chart: argo-cd
      sourceRef:
        kind: HelmRepository
        name: argocd
        namespace: argocd
      version: 8.1.1
  interval: 10m
  values:
    configs:
      params:
        server.disable.auth: true
        server.insecure: true
    crds:
      enabled: true
---
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: argocd
  namespace: argocd
spec:
  interval: 1h0m0s
  timeout: 60s
  url: https://argoproj.github.io/argo-helm
